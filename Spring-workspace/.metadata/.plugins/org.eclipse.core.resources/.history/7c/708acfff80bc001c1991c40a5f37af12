package com.example.demo.mvc.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.mvc.domain.Board;
import com.example.demo.mvc.service.BoardService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

/**
 * 게시판 컨트롤러
 * @author 곰돌이
 *
 */
@RestController
@RequestMapping("/board")
@Api(tags="게시판API")
public class BoardController {
	@Autowired
	private BoardService boardService;
	/**
	 * 목록 리턴
	 * @return
	 */
	@GetMapping
	@ApiOperation(value="목록조회",notes="게시물 목록 정보를 조회할 수 있습니다.")
	public List<Board> getList(){
		return boardService.getList();
	};
	/**
	 * 상세 정보 리턴
	 * @param boardSeq
	 * @return
	 */
	@ApiOperation(value="상세조회",notes="게시물 번호에 해당하는 상세 정보를 조회할 수 있습니다.")
	@ApiImplicitParams({
		@ApiImplicitParam(name="boardSeq",value="게시물 번호", example="1")
	})
	@GetMapping("/{boardSeq}") //boardSeq를 url에 받음
	public Board get(@PathVariable int boardSeq) {
		return boardService.get(boardSeq);
	};
	/**
	 * 등록/수정 처리
	 * @param parameter
	 */
	@PutMapping
	@ApiOperation(value="등록/수정 처리",notes="신규 게시물 저장 및 기존 게시물 업데이트 할 수 있습니다.")
	@ApiImplicitParams({
		@ApiImplicitParam(name="boardSeq",value="게시물 번호", example="1")
	})
	public int save(Board parameter) {
		boardService.save(parameter);
		return parameter.getBoardSeq();
	};
	/**
	 * 삭제 처리
	 * @param board
	 */
	@GetMapping("/delete/{boardSeq}")
	public boolean delete(@PathVariable int boardSeq) {
		Board board = boardService.get(boardSeq);
		if(board==null) {
			return false;
		}
		boardService.delete(boardSeq);
		return true;
	};
}
